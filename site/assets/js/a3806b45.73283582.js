"use strict";(self.webpackChunk_project_hami_website=self.webpackChunk_project_hami_website||[]).push([[5189],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var m=n.createContext({}),l=function(e){var t=n.useContext(m),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(m.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,m=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),s=l(r),d=i,v=s["".concat(m,".").concat(d)]||s[d]||u[d]||o;return r?n.createElement(v,a(a({ref:t},p),{},{components:r})):n.createElement(v,a({ref:t},p))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=s;var c={};for(var m in t)hasOwnProperty.call(t,m)&&(c[m]=t[m]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var l=2;l<o;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},1300:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>m,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var n=r(7462),i=(r(7294),r(3905));const o={title:"Allocate device memory"},a=void 0,c={unversionedId:"userguide/NVIDIA-device/specify-device-memory-usage",id:"version-v1.3.0/userguide/NVIDIA-device/specify-device-memory-usage",title:"Allocate device memory",description:"Allocate device memory to container",source:"@site/versioned_docs/version-v1.3.0/userguide/NVIDIA-device/specify-device-memory-usage.md",sourceDirName:"userguide/NVIDIA-device",slug:"/userguide/NVIDIA-device/specify-device-memory-usage",permalink:"/docs/userguide/NVIDIA-device/specify-device-memory-usage",draft:!1,editUrl:"https://github.com/karmada-io/website/edit/main/docs/userguide/NVIDIA-device/specify-device-memory-usage.md",tags:[],version:"v1.3.0",lastUpdatedBy:"limengxuan",lastUpdatedAt:1713177637,formattedLastUpdatedAt:"Apr 15, 2024",frontMatter:{title:"Allocate device memory"},sidebar:"version-v1.3.0/docs",previous:{title:"globalview",permalink:"/docs/userguide/monitoring/globalview"},next:{title:"Allocate device core usage",permalink:"/docs/userguide/NVIDIA-device/specify-device-core-usage"}},m={},l=[{value:"Allocate device memory to container",id:"allocate-device-memory-to-container",level:2}],p={toc:l};function u(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"allocate-device-memory-to-container"},"Allocate device memory to container"),(0,i.kt)("p",null,"Allocate a certain size of device memory by specify resources such as ",(0,i.kt)("inlineCode",{parentName:"p"},"nvidia.com/gpumem"),".\nOptional, Each unit of ",(0,i.kt)("inlineCode",{parentName:"p"},"nvidia.com/gpumem")," equals to 1M."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"      resources:\n        limits:\n          nvidia.com/gpu: 1 # requesting 1 GPU\n          nvidia.com/gpumem: 3000 # Each GPU contains 3000m device memory\n")),(0,i.kt)("p",null,"Allocate a percentage of device memory by specify resource ",(0,i.kt)("inlineCode",{parentName:"p"},"nvidia.com/gpumem-percentage"),".\nOptional, each unit of ",(0,i.kt)("inlineCode",{parentName:"p"},"nvidia.com/gpumem-percentage")," equals to 1% percentage of device memory."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"      resources:\n        limits:\n          nvidia.com/gpu: 1 # requesting 1 GPU\n          nvidia.com/gpumem-percentage: 50 # Each GPU contains 50% device memory\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"NOTICE:")," ",(0,i.kt)("em",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"em"},"nvidia.com/gpumem")," and ",(0,i.kt)("inlineCode",{parentName:"em"},"nvidia.com/gpumem-percentage")," can't be assigned together"))))}u.isMDXComponent=!0}}]);