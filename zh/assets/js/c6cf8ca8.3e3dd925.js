"use strict";(self.webpackChunk_project_hami_website=self.webpackChunk_project_hami_website||[]).push([[2643],{3905:(e,t,i)=>{i.d(t,{Zo:()=>d,kt:()=>v});var n=i(7294);function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function o(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function a(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?o(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function c(e,t){if(null==e)return{};var i,n,r=function(e,t){if(null==e)return{};var i,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)i=o[n],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)i=o[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):a(a({},t),e)),i},d=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},l=n.forwardRef((function(e,t){var i=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),l=u(i),v=r,m=l["".concat(s,".").concat(v)]||l[v]||p[v]||o;return i?n.createElement(m,a(a({ref:t},d),{},{components:i})):n.createElement(m,a({ref:t},d))}));function v(e,t){var i=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=i.length,a=new Array(o);a[0]=l;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var u=2;u<o;u++)a[u]=i[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,i)}l.displayName="MDXCreateElement"},8627:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var n=i(7462),r=(i(7294),i(3905));const o={title:"Assign to certain device"},a=void 0,c={unversionedId:"userguide/NVIDIA-device/specify-device-uuid-to-use",id:"version-v1.3.0/userguide/NVIDIA-device/specify-device-uuid-to-use",title:"Assign to certain device",description:"Assign to certain device type",source:"@site/versioned_docs/version-v1.3.0/userguide/NVIDIA-device/specify-device-uuid-to-use.md",sourceDirName:"userguide/NVIDIA-device",slug:"/userguide/NVIDIA-device/specify-device-uuid-to-use",permalink:"/zh/docs/userguide/NVIDIA-device/specify-device-uuid-to-use",draft:!1,editUrl:"https://github.com/karmada-io/website/edit/main/docs/userguide/NVIDIA-device/specify-device-uuid-to-use.md",tags:[],version:"v1.3.0",lastUpdatedBy:"limengxuan",lastUpdatedAt:1713177637,formattedLastUpdatedAt:"2024\u5e744\u670815\u65e5",frontMatter:{title:"Assign to certain device"},sidebar:"version-v1.3.0/docs",previous:{title:"Assign to certain device type",permalink:"/zh/docs/userguide/NVIDIA-device/specify-device-type-to-use"},next:{title:"Use exclusive GPU",permalink:"/zh/docs/userguide/NVIDIA-device/examples/use-exclusive-card"}},s={},u=[{value:"Assign to certain device type",id:"assign-to-certain-device-type",level:2}],d={toc:u};function p(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"assign-to-certain-device-type"},"Assign to certain device type"),(0,r.kt)("p",null,"Sometimes a task may wish to run on a certain GPU, it can fill the ",(0,r.kt)("inlineCode",{parentName:"p"},"nvidia.com/use-gpuuuid")," field in pod annotation. HAMi scheduler will try to fit in device with that uuid."),(0,r.kt)("p",null,"For example, a task with the following annotation will be assigned to the device with uuid ",(0,r.kt)("inlineCode",{parentName:"p"},"GPU-123456")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'metadata:\n  annotations:\n    nvidia.com/use-gpuuuid: "GPU-123456"\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"NOTICE:")," ",(0,r.kt)("em",{parentName:"p"},"Each GPU UUID is unique in a cluster, so assign a certain UUID means assigning this task to certain node with that GPU"))))}p.isMDXComponent=!0}}]);