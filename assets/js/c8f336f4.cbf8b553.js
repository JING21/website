"use strict";(self.webpackChunk_project_hami_website=self.webpackChunk_project_hami_website||[]).push([[6110],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),p=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),h=p(r),m=n,k=h["".concat(l,".").concat(m)]||h[m]||u[m]||i;return r?a.createElement(k,o(o({ref:t},c),{},{components:r})):a.createElement(k,o({ref:t},c))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var p=2;p<i;p++)o[p]=r[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}h.displayName="MDXCreateElement"},5997:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=r(7462),n=(r(7294),r(3905));const i={title:"How to cherry-pick PRs"},o=void 0,s={unversionedId:"contributor/cherry-picks",id:"version-v1.3.0/contributor/cherry-picks",title:"How to cherry-pick PRs",description:"This document explains how cherry picks are managed on release branches within",source:"@site/versioned_docs/version-v1.3.0/contributor/cherry-picks.md",sourceDirName:"contributor",slug:"/contributor/cherry-picks",permalink:"/docs/contributor/cherry-picks",draft:!1,editUrl:"https://github.com/karmada-io/website/edit/main/docs/contributor/cherry-picks.md",tags:[],version:"v1.3.0",lastUpdatedBy:"limengxuan",lastUpdatedAt:1713177637,formattedLastUpdatedAt:"Apr 15, 2024",frontMatter:{title:"How to cherry-pick PRs"},sidebar:"version-v1.3.0/docs",previous:{title:"Protocol design",permalink:"/docs/developers/protocol"},next:{title:"GitHub Workflow",permalink:"/docs/contributor/github-workflow"}},l={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"What Kind of PRs are Good for Cherry Picks",id:"what-kind-of-prs-are-good-for-cherry-picks",level:2},{value:"Initiate a Cherry Pick",id:"initiate-a-cherry-pick",level:2},{value:"Cherry Pick Review",id:"cherry-pick-review",level:2},{value:"Troubleshooting Cherry Picks",id:"troubleshooting-cherry-picks",level:2},{value:"Cherry Picks for Unsupported Releases",id:"cherry-picks-for-unsupported-releases",level:2}],c={toc:p};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"This document explains how cherry picks are managed on release branches within\nthe ",(0,n.kt)("inlineCode",{parentName:"p"},"karmada-io/karmada")," repository.\nA common use case for this task is backporting PRs from master to release\nbranches."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"This doc is lifted from ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/kubernetes/community/blob/master/contributors/devel/sig-release/cherry-picks.md"},"Kubernetes cherry-pick"),".")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#prerequisites"},"Prerequisites")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#what-kind-of-prs-are-good-for-cherry-picks"},"What Kind of PRs are Good for Cherry Picks")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#initiate-a-cherry-pick"},"Initiate a Cherry Pick")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#cherry-pick-review"},"Cherry Pick Review")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#troubleshooting-cherry-picks"},"Troubleshooting Cherry Picks")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#cherry-picks-for-unsupported-releases"},"Cherry Picks for Unsupported Releases"))),(0,n.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"A pull request merged against the ",(0,n.kt)("inlineCode",{parentName:"li"},"master")," branch."),(0,n.kt)("li",{parentName:"ul"},"The release branch exists (example: ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/karmada-io/karmada/tree/release-1.0"},(0,n.kt)("inlineCode",{parentName:"a"},"release-1.0")),")"),(0,n.kt)("li",{parentName:"ul"},"The normal git and GitHub configured shell environment for pushing to your\nkarmada ",(0,n.kt)("inlineCode",{parentName:"li"},"origin")," fork on GitHub and making a pull request against a\nconfigured remote ",(0,n.kt)("inlineCode",{parentName:"li"},"upstream")," that tracks\n",(0,n.kt)("inlineCode",{parentName:"li"},"https://github.com/karmada-io/karmada.git"),", including ",(0,n.kt)("inlineCode",{parentName:"li"},"GITHUB_USER"),"."),(0,n.kt)("li",{parentName:"ul"},"Have GitHub CLI (",(0,n.kt)("inlineCode",{parentName:"li"},"gh"),") installed following ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/cli/cli#installation"},"installation instructions"),"."),(0,n.kt)("li",{parentName:"ul"},'A github personal access token which has permissions "repo" and "read:org".\nPermissions are required for ',(0,n.kt)("a",{parentName:"li",href:"https://cli.github.com/manual/gh_auth_login"},"gh auth login"),"\nand not used for anything unrelated to cherry-pick creation process\n(creating a branch and initiating PR).")),(0,n.kt)("h2",{id:"what-kind-of-prs-are-good-for-cherry-picks"},"What Kind of PRs are Good for Cherry Picks"),(0,n.kt)("p",null,"Compared to the normal master branch's merge volume across time,\nthe release branches see one or two orders of magnitude less PRs.\nThis is because there is an order or two of magnitude higher scrutiny.\nAgain, the emphasis is on critical bug fixes, e.g.,"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Loss of data"),(0,n.kt)("li",{parentName:"ul"},"Memory corruption"),(0,n.kt)("li",{parentName:"ul"},"Panic, crash, hang"),(0,n.kt)("li",{parentName:"ul"},"Security")),(0,n.kt)("p",null,"A bugfix for a functional issue (not a data loss or security issue) that only\naffects an alpha feature does not qualify as a critical bug fix."),(0,n.kt)("p",null,"If you are proposing a cherry pick and it is not a clear and obvious critical\nbug fix, please reconsider. If upon reflection you wish to continue, bolster\nyour case by supplementing your PR with e.g.,"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"A GitHub issue detailing the problem")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Scope of the change")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Risks of adding a change")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Risks of associated regression")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Testing performed, test cases added")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Key stakeholder reviewers/approvers attesting to their confidence in the\nchange being a required backport"))),(0,n.kt)("p",null,"It is critical that our full community is actively engaged on enhancements in\nthe project. If a released feature was not enabled on a particular provider's\nplatform, this is a community miss that needs to be resolved in the ",(0,n.kt)("inlineCode",{parentName:"p"},"master"),"\nbranch for subsequent releases. Such enabling will not be backported to the\npatch release branches."),(0,n.kt)("h2",{id:"initiate-a-cherry-pick"},"Initiate a Cherry Pick"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Run the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/karmada-io/karmada/blob/master/hack/cherry_pick_pull.sh"},"cherry pick script")),(0,n.kt)("p",{parentName:"li"},"This example applies a master branch PR #1206 to the remote branch\n",(0,n.kt)("inlineCode",{parentName:"p"},"upstream/release-1.0"),":"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"hack/cherry_pick_pull.sh upstream/release-1.0 1206\n")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Be aware the cherry pick script assumes you have a git remote called\n",(0,n.kt)("inlineCode",{parentName:"p"},"upstream")," that points at the Karmada github org.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"You will need to run the cherry pick script separately for each patch\nrelease you want to cherry pick to. Cherry picks should be applied to all\nactive release branches where the fix is applicable.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"If ",(0,n.kt)("inlineCode",{parentName:"p"},"GITHUB_TOKEN")," is not set you will be asked for your github password:\nprovide the github ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/settings/tokens"},"personal access token")," rather than your actual github\npassword. If you can securely set the environment variable ",(0,n.kt)("inlineCode",{parentName:"p"},"GITHUB_TOKEN"),"\nto your personal access token then you can avoid an interactive prompt.\nRefer ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/github/hub/issues/2655#issuecomment-735836048"},"https://github.com/github/hub/issues/2655#issuecomment-735836048")))))),(0,n.kt)("h2",{id:"cherry-pick-review"},"Cherry Pick Review"),(0,n.kt)("p",null,"As with any other PR, code OWNERS review (",(0,n.kt)("inlineCode",{parentName:"p"},"/lgtm"),") and approve (",(0,n.kt)("inlineCode",{parentName:"p"},"/approve"),") on\ncherry pick PRs as they deem appropriate."),(0,n.kt)("p",null,"The same release note requirements apply as normal pull requests, except the\nrelease note stanza will auto-populate from the master branch pull request from\nwhich the cherry pick originated."),(0,n.kt)("h2",{id:"troubleshooting-cherry-picks"},"Troubleshooting Cherry Picks"),(0,n.kt)("p",null,"Contributors may encounter some of the following difficulties when initiating a\ncherry pick."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"A cherry pick PR does not apply cleanly against an old release branch. In\nthat case, you will need to manually fix conflicts.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"The cherry pick PR includes code that does not pass CI tests. In such a case\nyou will have to fetch the auto-generated branch from your fork, amend the\nproblematic commit and force push to the auto-generated branch.\nAlternatively, you can create a new PR, which is noisier."))),(0,n.kt)("h2",{id:"cherry-picks-for-unsupported-releases"},"Cherry Picks for Unsupported Releases"),(0,n.kt)("p",null,"The community supports & patches releases need to be discussed."))}u.isMDXComponent=!0}}]);